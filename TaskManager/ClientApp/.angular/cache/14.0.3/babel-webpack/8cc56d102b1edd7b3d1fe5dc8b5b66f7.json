{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/preet/source/repos/TaskManager/TaskManager/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction HomeComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵelement(18, \"input\", 5);\n    i0.ɵɵtext(19, \" || \");\n    i0.ɵɵelement(20, \"input\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const taskinfo_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", taskinfo_r3[\"taskId\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", taskinfo_r3[\"taskStatusName\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", taskinfo_r3[\"taskTypeName\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", taskinfo_r3[\"taskDescription\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", taskinfo_r3[\"assignedUserName\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", taskinfo_r3[\"commentText\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", taskinfo_r3[\"commentTypeName\"], \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", taskinfo_r3[\"nextActionDate\"], \" \");\n  }\n}\n\nfunction HomeComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_div_24_option_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tt_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tt_r9.taskTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tt_r9.taskTypeName);\n  }\n}\n\nfunction HomeComponent_div_24_option_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ts_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ts_r10.taskStatusId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ts_r10.taskStatusName);\n  }\n}\n\nfunction HomeComponent_div_24_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ct_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ct_r11.CommentTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ct_r11.CommentTypeName);\n  }\n}\n\nfunction HomeComponent_div_24_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tInfo_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tInfo_r12.assignedTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tInfo_r12.assignedUserName);\n  }\n}\n\nfunction HomeComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"form\", 9, 10);\n    i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_div_24_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n\n      const _r4 = i0.ɵɵreference(2);\n\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onSubmit(_r4.value));\n    });\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"div\")(5, \"div\")(6, \"label\", 12);\n    i0.ɵɵtext(7, \"Task Description: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\");\n    i0.ɵɵelement(9, \"input\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\")(11, \"div\")(12, \"label\", 14);\n    i0.ɵɵtext(13, \"Comment: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\");\n    i0.ɵɵelement(15, \"input\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\")(17, \"div\")(18, \"label\", 16);\n    i0.ɵɵtext(19, \"Required By: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\");\n    i0.ɵɵelement(21, \"input\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\")(23, \"div\")(24, \"label\", 18);\n    i0.ɵɵtext(25, \"Select Task Type: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"select\", 19);\n    i0.ɵɵtemplate(27, HomeComponent_div_24_option_27_Template, 2, 2, \"option\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"div\")(29, \"div\")(30, \"label\", 21);\n    i0.ɵɵtext(31, \"Select Task Status: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"select\", 22);\n    i0.ɵɵtemplate(33, HomeComponent_div_24_option_33_Template, 2, 2, \"option\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"div\")(35, \"div\")(36, \"label\", 23);\n    i0.ɵɵtext(37, \"Select Comment Type: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"select\", 24);\n    i0.ɵɵtemplate(39, HomeComponent_div_24_option_39_Template, 2, 2, \"option\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(40, \"div\")(41, \"div\")(42, \"label\", 25);\n    i0.ɵɵtext(43, \"User Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"select\", 26);\n    i0.ɵɵtemplate(45, HomeComponent_div_24_option_45_Template, 2, 2, \"option\", 20);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(46, \"input\", 27);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(27);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.taskType);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.taskStatus);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.commentType);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.taskInformation);\n  }\n}\n\nexport class HomeComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.visibleOnTaskCreation = false;\n    this.added = false;\n    this.taskInformation = [];\n    this.taskType = [];\n    this.taskStatus = [];\n    this.commentType = [];\n  }\n\n  ngOnInit() {\n    console.log(this.getTasks().subscribe(response => {\n      this.taskInformation = response;\n    }));\n    this.taskType = [{\n      taskTypeId: 1,\n      taskTypeName: \"User Instruction\"\n    }, {\n      taskTypeId: 2,\n      taskTypeName: \"Technical Info\"\n    }];\n    this.taskStatus = [{\n      taskStatusId: 1,\n      taskStatusName: \"Not Started\"\n    }, {\n      taskStatusId: 2,\n      taskStatusName: \"In Progress\"\n    }, {\n      taskStatusId: 3,\n      taskStatusName: \"Cancelled\"\n    }, {\n      taskStatusId: 4,\n      taskStatusName: \"Completed\"\n    }];\n    this.commentType = [{\n      CommentTypeId: 1,\n      CommentTypeName: \"New\"\n    }, {\n      CommentTypeId: 2,\n      CommentTypeName: \"Update\"\n    }];\n  }\n\n  getTasks() {\n    const url = 'https://localhost:7067/api/Tasks';\n    return this.httpClient.get(url);\n  }\n\n  onSubmit(taskInfo) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //let jsonObject: any = JSON.parse(taskInfo);\n      //let course: taskInformation = <taskInformation>jsonObj;\n      const url = 'https://localhost:7067/api/Tasks';\n\n      const response = _this.httpClient.post(url, JSON.stringify(taskInfo)); //await response.toPromise();\n\n\n      _this.visibleOnTaskCreation = false;\n      _this.added = true; //console.log(taskInfo);\n    })();\n  }\n\n  createTasks() {\n    this.visibleOnTaskCreation = true;\n  }\n\n  ontaskSelected(val) {\n    console.log(val);\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 25,\n  vars: 3,\n  consts: [[\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"value\", \"Create New Task\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Edit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", \"value\", \"Delete\", 1, \"btn\", \"btn-danger\"], [\"type\", \"text\", \"value\", \"Added Successfully\"], [1, \"form-group\"], [3, \"ngSubmit\"], [\"taskInfo\", \"ngForm\"], [1, \"table\"], [\"for\", \"TaskDescription\"], [\"type\", \"text\", \"name\", \"TaskDescription\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"Comment\"], [\"type\", \"text\", \"name\", \"Comment\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"RequiredBy\"], [\"type\", \"text\", \"name\", \"RequiredBy\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"taskType\"], [\"name\", \"taskType\", \"ngModel\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"taskStatus\"], [\"name\", \"taskStatus\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"commentType\"], [\"name\", \"commentType\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"userName\"], [\"name\", \"userName\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"table\", 0)(2, \"thead\")(3, \"th\");\n      i0.ɵɵtext(4, \" Task Id \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \" Task Status \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \" Task Type \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \" Task Description \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \" Assigned To \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \" Comment \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \" Comment Type \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \" Next Action Date \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, HomeComponent_tr_20_Template, 21, 8, \"tr\", 1);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\")(22, \"input\", 2);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_input_click_22_listener() {\n        return ctx.createTasks();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(23, HomeComponent_div_23_Template, 2, 0, \"div\", 3);\n      i0.ɵɵtemplate(24, HomeComponent_div_24_Template, 47, 4, \"div\", 4);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.taskInformation);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.added);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.visibleOnTaskCreation);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;IA8BMA,2BAA6C,CAA7C,EAA6C,IAA7C;IAEIA;IACFA;IACAA;IACEA;IACFA;IACAA;IACEA;IACFA;IACAA;IACEA;IACFA;IACAA;IACEA;IACFA;IACAA;IACEA;IACFA;IACAA;IACEA;IACFA;IACAA;IACEA;IACFA;IACAA;IACEA;IAA6DA;IAC7DA;IACFA;;;;;IA1BEA;IAAAA;IAGAA;IAAAA;IAGAA;IAAAA;IAGAA;IAAAA;IAGAA;IAAAA;IAGAA;IAAAA;IAGAA;IAAAA;IAGAA;IAAAA;;;;;;IAaVA;IAAmBA;IAAgDA;;;;;;IAiCvDA;IAA4DA;IAAmBA;;;;;IAA3CA;IAAwBA;IAAAA;;;;;;IAQ5DA;IAAgEA;IAAqBA;;;;;IAA/CA;IAA0BA;IAAAA;;;;;;IAQhEA;IAAkEA;IAAsBA;;;;;IAAjDA;IAA2BA;IAAAA;;;;;;IAQlEA;IAAyEA;IAA0BA;;;;;IAArDA;IAA2BA;IAAAA;;;;;;;;IAvDrFA,+BAAsD,CAAtD,EAAsD,MAAtD,EAAsD,CAAtD,EAAsD,EAAtD;IAC2BA;MAAAA;;MAAA;;MAAA;MAAA,OAAYA,2CAAZ;IAAoC,CAApC;IACvBA,gCAAmB,CAAnB,EAAmB,KAAnB,EAAmB,CAAnB,EAAmB,KAAnB,EAAmB,CAAnB,EAAmB,OAAnB,EAAmB,EAAnB;IAGmCA;IAAkBA;IAEjDA;IACEA;IACFA;IAEFA,6BAAM,EAAN,EAAM,KAAN,EAAM,EAAN,EAAM,OAAN,EAAM,EAAN;IAEyBA;IAASA;IAEhCA;IACEA;IACFA;IAEFA,6BAAM,EAAN,EAAM,KAAN,EAAM,EAAN,EAAM,OAAN,EAAM,EAAN;IAE4BA;IAAaA;IAEvCA;IACEA;IACFA;IAEFA,6BAAM,EAAN,EAAM,KAAN,EAAM,EAAN,EAAM,OAAN,EAAM,EAAN;IAE0BA;IAAkBA;IACxCA;IACEA;IACFA;IAGJA,6BAAK,EAAL,EAAK,KAAL,EAAK,EAAL,EAAK,OAAL,EAAK,EAAL;IAE4BA;IAAoBA;IAC5CA;IACEA;IACFA;IAGJA,6BAAM,EAAN,EAAM,KAAN,EAAM,EAAN,EAAM,OAAN,EAAM,EAAN;IAE6BA;IAAqBA;IAC9CA;IACEA;IACFA;IAGJA,6BAAM,EAAN,EAAM,KAAN,EAAM,EAAN,EAAM,OAAN,EAAM,EAAN;IAE0BA;IAAWA;IACjCA;IACEA;IACFA;IAINA;IACFA;;;;;IA9BiCA;IAAAA;IAQAA;IAAAA;IAQAA;IAAAA;IAQGA;IAAAA;;;;AC7GtC,OAAM,MAAOC,aAAP,CAAoB;EAOxBC,YAAoBC,UAApB,EAA0C;IAAtB;IANpB,6BAAiC,KAAjC;IACA,aAAiB,KAAjB;IACA,uBAA0C,EAA1C;IACA,gBAA4B,EAA5B;IACA,kBAAgC,EAAhC;IACA,mBAAkC,EAAlC;EAGC;;EAEDC,QAAQ;IACNC,OAAO,CAACC,GAAR,CAAY,KAAKC,QAAL,GAAgBC,SAAhB,CAA0BC,QAAQ,IAAG;MAAG,KAAKC,eAAL,GAAuBD,QAAvB;IAAiC,CAAzE,CAAZ;IACA,KAAKE,QAAL,GAAgB,CACd;MAAEC,UAAU,EAAE,CAAd;MAAiBC,YAAY,EAAE;IAA/B,CADc,EAEd;MAAED,UAAU,EAAE,CAAd;MAAiBC,YAAY,EAAE;IAA/B,CAFc,CAAhB;IAKA,KAAKC,UAAL,GAAkB,CAChB;MAAEC,YAAY,EAAE,CAAhB;MAAmBC,cAAc,EAAE;IAAnC,CADgB,EAEhB;MAAED,YAAY,EAAE,CAAhB;MAAmBC,cAAc,EAAE;IAAnC,CAFgB,EAGhB;MAAED,YAAY,EAAE,CAAhB;MAAmBC,cAAc,EAAE;IAAnC,CAHgB,EAIhB;MAAED,YAAY,EAAE,CAAhB;MAAmBC,cAAc,EAAE;IAAnC,CAJgB,CAAlB;IAOA,KAAKC,WAAL,GAAmB,CACjB;MAAEC,aAAa,EAAE,CAAjB;MAAoBC,eAAe,EAAE;IAArC,CADiB,EAEjB;MAAED,aAAa,EAAE,CAAjB;MAAoBC,eAAe,EAAC;IAApC,CAFiB,CAAnB;EAID;;EAEMZ,QAAQ;IACb,MAAMa,GAAG,GAAG,kCAAZ;IACA,OAAO,KAAKjB,UAAL,CAAgBkB,GAAhB,CAAuCD,GAAvC,CAAP;EACD;;EAEYE,QAAQ,CAACC,QAAD,EAA0B;IAAA;;IAAA;MAC7C;MACA;MACA,MAAMH,GAAG,GAAG,kCAAZ;;MACA,MAAMX,QAAQ,GAAG,KAAI,CAACN,UAAL,CAAgBqB,IAAhB,CAAwCJ,GAAxC,EAA6CK,IAAI,CAACC,SAAL,CAAeH,QAAf,CAA7C,CAAjB,CAJ6C,CAK7C;;;MACA,KAAI,CAACI,qBAAL,GAA6B,KAA7B;MACA,KAAI,CAACC,KAAL,GAAa,IAAb,CAP6C,CAQ7C;IAR6C;EAS9C;;EAEDC,WAAW;IACT,KAAKF,qBAAL,GAA6B,IAA7B;EACD;;EAEDG,cAAc,CAACC,GAAD,EAAS;IACrB1B,OAAO,CAACC,GAAR,CAAYyB,GAAZ;EACD;;AArDuB;;;mBAAb9B,eAAaD;AAAA;;;QAAbC;EAAa+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDb1BpC,4BAAK,CAAL,EAAK,OAAL,EAAK,CAAL,EAAK,CAAL,EAAK,OAAL,EAAK,CAAL,EAAK,IAAL;MAIQA;MACFA;MACFA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MACAA;MACEA;MACFA;MAEAA;MACEA;MA8BFA;MAGJA,6BAAK,EAAL,EAAK,OAAL,EAAK,CAAL;MACuEA;QAAA,OAASqC,iBAAT;MAAsB,CAAtB;MAArErC;MAEFA;MAEAA;;;;MAtC+BA;MAAAA;MAoCzBA;MAAAA;MAEmBA;MAAAA","names":["i0","HomeComponent","constructor","httpClient","ngOnInit","console","log","getTasks","subscribe","response","taskInformation","taskType","taskTypeId","taskTypeName","taskStatus","taskStatusId","taskStatusName","commentType","CommentTypeId","CommentTypeName","url","get","onSubmit","taskInfo","post","JSON","stringify","visibleOnTaskCreation","added","createTasks","ontaskSelected","val","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\preet\\source\\repos\\TaskManager\\TaskManager\\ClientApp\\src\\app\\home\\home.component.html","C:\\Users\\preet\\source\\repos\\TaskManager\\TaskManager\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["\r\n<div>\r\n  <table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n    <thead>\r\n      <th>\r\n        Task Id\r\n      </th>\r\n    <th>\r\n      Task Status\r\n    </th>\r\n    <th>\r\n      Task Type\r\n    </th>\r\n    <th>\r\n      Task Description\r\n    </th>\r\n    <th>\r\n      Assigned To\r\n    </th>\r\n    <th>\r\n      Comment\r\n    </th>\r\n    <th>\r\n      Comment Type\r\n    </th>\r\n    <th>\r\n      Next Action Date\r\n    </th>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let taskinfo of taskInformation\">\r\n        <td>\r\n          {{taskinfo[\"taskId\"]}}\r\n        </td>\r\n        <td>\r\n          {{taskinfo[\"taskStatusName\"]}}\r\n        </td>\r\n        <td>\r\n          {{taskinfo[\"taskTypeName\"]}}\r\n        </td>\r\n        <td>\r\n          {{taskinfo[\"taskDescription\"]}}\r\n        </td>\r\n        <td>\r\n          {{taskinfo[\"assignedUserName\"]}}\r\n        </td>\r\n        <td>\r\n          {{taskinfo[\"commentText\"]}}\r\n        </td>\r\n        <td>\r\n          {{taskinfo[\"commentTypeName\"]}}\r\n        </td>\r\n        <td>\r\n          {{taskinfo[\"nextActionDate\"]}}\r\n        </td>\r\n        <td>\r\n          <input type=\"button\" value=\"Edit\" class=\"btn btn-primary\" /> ||\r\n          <input type=\"button\" value=\"Delete\" class=\"btn btn-danger\" />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<div>\r\n  <input type=\"button\" value=\"Create New Task\" class=\"btn btn-primary\" (click)=\"createTasks()\" />\r\n</div>\r\n<div *ngIf=\"added\"><input type=\"text\" value=\"Added Successfully\" /></div>\r\n\r\n<div class=\"form-group\" *ngIf=\"visibleOnTaskCreation\">\r\n  <form #taskInfo=\"ngForm\" (ngSubmit)=\"onSubmit(taskInfo.value)\">\r\n    <div class=\"table\">\r\n      <div >\r\n        <div >\r\n          <label for=\"TaskDescription\">Task Description: </label>\r\n        </div>\r\n        <div>\r\n          <input type=\"text\" name=\"TaskDescription\" class=\"form-control\" ngModel />\r\n        </div>\r\n      </div>\r\n      <div >\r\n        <div >\r\n          <label for=\"Comment\">Comment: </label>\r\n        </div>\r\n        <div >\r\n          <input type=\"text\" name=\"Comment\" class=\"form-control\" ngModel />\r\n        </div>\r\n      </div>\r\n      <div >\r\n        <div >\r\n          <label for=\"RequiredBy\">Required By: </label>\r\n        </div>\r\n        <div>\r\n          <input type=\"text\" name=\"RequiredBy\" class=\"form-control\" ngModel />\r\n        </div>\r\n      </div>\r\n      <div >\r\n        <div >\r\n          <label for=\"taskType\">Select Task Type: </label>\r\n          <select name=\"taskType\" class=\"form-control\" ngModel>\r\n            <option *ngFor=\"let tt of taskType\" [value]=\"tt.taskTypeId\">{{tt.taskTypeName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <label for=\"taskStatus\">Select Task Status: </label>\r\n          <select name=\"taskStatus\" class=\"form-control\" ngModel>\r\n            <option *ngFor=\"let ts of taskStatus\" [value]=\"ts.taskStatusId\">{{ts.taskStatusName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div >\r\n        <div >\r\n          <label for=\"commentType\">Select Comment Type: </label>\r\n          <select name=\"commentType\" class=\"form-control\" ngModel>\r\n            <option *ngFor=\"let ct of commentType\" [value]=\"ct.CommentTypeId\">{{ct.CommentTypeName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div >\r\n        <div >\r\n          <label for=\"userName\">User Name: </label>\r\n          <select name=\"userName\" class=\"form-control\" ngModel>\r\n            <option *ngFor=\"let tInfo of taskInformation\" [value]=\"tInfo.assignedTo\">{{tInfo.assignedUserName}}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary\" />\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { taskInformation } from '../models/taskInformation';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { taskType } from '../models/taskType';\r\nimport { taskStatus } from '../models/taskStatus';\r\nimport { commentType } from '../models/commentType';\r\nimport { FormBuilder, FormControl } from '@angular/forms'\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  visibleOnTaskCreation: boolean = false;\r\n  added: boolean = false;\r\n  taskInformation: Array<taskInformation> = [];\r\n  taskType: Array<taskType> = [];\r\n  taskStatus: Array<taskStatus> = [];\r\n  commentType: Array<commentType> = [];\r\n  constructor(private httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.getTasks().subscribe(response => { this.taskInformation = response }));\r\n    this.taskType = [\r\n      { taskTypeId: 1, taskTypeName: \"User Instruction\" },\r\n      { taskTypeId: 2, taskTypeName: \"Technical Info\" }\r\n    ];\r\n\r\n    this.taskStatus = [\r\n      { taskStatusId: 1, taskStatusName: \"Not Started\" },\r\n      { taskStatusId: 2, taskStatusName: \"In Progress\" },\r\n      { taskStatusId: 3, taskStatusName: \"Cancelled\" },\r\n      { taskStatusId: 4, taskStatusName: \"Completed\" }\r\n    ];\r\n\r\n    this.commentType = [\r\n      { CommentTypeId: 1, CommentTypeName: \"New\" },\r\n      { CommentTypeId: 2, CommentTypeName:\"Update\" }\r\n    ]\r\n  }\r\n\r\n  public getTasks(): Observable<taskInformation[]> {\r\n    const url = 'https://localhost:7067/api/Tasks'\r\n    return this.httpClient.get<taskInformation[]>(url)\r\n  }\r\n\r\n  public async onSubmit(taskInfo: taskInformation) {\r\n    //let jsonObject: any = JSON.parse(taskInfo);\r\n    //let course: taskInformation = <taskInformation>jsonObj;\r\n    const url = 'https://localhost:7067/api/Tasks'\r\n    const response = this.httpClient.post<taskInformation[]>(url, JSON.stringify(taskInfo));\r\n    //await response.toPromise();\r\n    this.visibleOnTaskCreation = false;\r\n    this.added = true;\r\n    //console.log(taskInfo);\r\n  }\r\n\r\n  createTasks() {\r\n    this.visibleOnTaskCreation = true;\r\n  }\r\n\r\n  ontaskSelected(val: any) {\r\n    console.log(val);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}